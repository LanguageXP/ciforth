#  Copyright 2000 (c): Albert van der Horst, Dutch Forth Worksshop by GPL
lina <<%
: ?TERMINAL 0 ;
8 LOAD

8 CONSTANT TAB
10 CONSTANT LF
: IS-BLANK  ( char -- flag)
  0 ( Innocent until proven guilty)
  OVER TAB = OR
  OVER LF = OR
  OVER BL = OR
  SWAP DROP ;

0 VARIABLE LAST-WAS-BLANK
0 VARIABLE C
0 VARIABLE W
0 VARIABLE L
: ZERO-COUNT 0 C !   0 W !   0 L ! ;
: SHOW-COUNT C @ . W @ . L @ . CR ;
: COUNT-FILE 1 C !   1 W !   3 L ! ;
KRAAK BLOCK-INIT
             : ^^ ^ HERE 10 DUMP ;
0 VARIABLE HANDLE
: ZERO-ENDED COUNT OVER + 0 SWAP C! ; ( filename -- c-zero ended filename )
: OPEN-LINUX ^^ ZERO-ENDED ^^ 0 0 5 LINOS ^ ; ( c-file -- handle )
: STILL-FILES HERE 1+ C@  ( -- flag ) ;
: OPEN-FILE BL WORD STILL-FILES  ( [filename-at-here] -- handle/-1 )
IF HERE COUNT TYPE HERE OPEN-LINUX ELSE -1 THEN  HANDLE ! ;
: CLOSE-FILE ;

: TREAT-FILE ZERO-COUNT COUNT-FILE SHOW-COUNT ;

: DO-FILE BEGIN OPEN-FILE STILL-FILES WHILE ( TREAT-FILE CLOSE-FILE) REPEAT ^ ;
." HERE IT COMES "
DO-FILE $*
." HERE IT GOES "
BYE

If you are not familiar with wc, study the specification by typing
man wc an a Unix system.

1. What can be done improve the program?
Hints :
 A. Brodie has said: "If you see dashes, there is something wrong"
 B. Moore has said: "Do not comment, rewrite!"
Warning: if your proposal detoriates the program, points are subtracted.
2. Why would the author use the word TREAT-FILE while HANDLE-FILE would
be more straightforward?
3. There are lots of global variables. Still the author claims this program
is object oriented. How could such a stand be defended? Do you agree with
such a stand? If this is a class how many objects are there?
4. Make a Magic-7 map of the program. Start with a list of Forth words used.
Mention any improvements you see based on this analysis.
5. Discuss how you would add the handling of the -c -w -l options in this
program. Now do it! Discuss where your expectations went afoul.

A Magic-7 map of a source is a subdivision of the source in parts
(7-space's) where each part has at most seven names that are global (i.e.
used by some other part) and each part uses names from at most seven other
parts. 7-space's with names of the language used need not be checked for
usage of other parts (you cannot look into the implementation of the language.)

Operators of the language used, keywords, macro names,
names of include files (or name spaces) all count as names.
Of course a part must be connected, (i.e. consist of consecutive lines,
you cannot put all ROT operators on a separate line and make it a magic-7
part.) But a magic-7 part may be totally embedded in some other magic-7 part,
without making the later part invalid.

Language elements that do not count as magic-7 names are brackets,
trait d'unions, quotes and comment.
In forth we effectively only have the comment and any text printed.
