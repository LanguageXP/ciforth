#  Copyright 2000 (c): Albert van der Horst, Dutch Forth Worksshop by GPL
lina <<% | tail -n$#
\ ( Environmental dependancies : )
\ ( This is a ISO Forth Program using only standard ISO Words)
\ ( plus LINOS (par1, par2, par3, function# -- result/error )
\ ( The following words are not ANSI : none (any more))
\ ( An environmental dependancy ?BLANK is used. )

9 CONSTANT TAB
10 CONSTANT LF
 ( char -- flag)
\ : IS-BLANK    BL 1+ < ;   Compiles under ISO.
: IS-BLANK ?BLANK ;

VARIABLE LAST-WAS-BLANK
VARIABLE L
VARIABLE W
VARIABLE C
: ZERO-COUNT 0 L !   0 W !   0 C ! -1 LAST-WAS-BLANK ! ;
: SHOW-COUNT SPACE L @ . W @ . C @ . CR ;

1000000 CONSTANT SIZE
CREATE BUFFER SIZE ALLOT
: AT-WORD-START IS-BLANK  LAST-WAS-BLANK @ 0= AND ; ( char -- flag)
( All four  : ( char -- char )
: COUNT-L LF OVER = IF 1 L +! THEN ;
: COUNT-W DUP AT-WORD-START IF 1 W +! THEN DUP IS-BLANK LAST-WAS-BLANK ! ;
: COUNT-C 1 C +! ;
: COUNT-CHAR COUNT-C COUNT-W COUNT-L ;
: COUNT-BUFFER BUFFER SWAP OVER + SWAP DO I C@ COUNT-CHAR DROP LOOP ; ( len-)

5 CONSTANT OPEN
3 CONSTANT READ
6 CONSTANT CLOSE
0 CONSTANT O_RDONLY

VARIABLE HANDLE
: COUNT-FILE BEGIN HANDLE @ BUFFER SIZE READ LINOS DUP 0 >
WHILE COUNT-BUFFER REPEAT DROP ;

: ZERO-ENDED COUNT OVER + 0 SWAP C! ; ( filename -- c-zero ended filename )
( c-name -- handle/err )
: OPEN-LINUX ZERO-ENDED O_RDONLY 0 OPEN LINOS DUP ?LINUX-ERROR ;
: STILL-FILES HERE C@  ( -- flag ) ;  ( Count <>0 means more files)
: OPEN-FILE BL WORD STILL-FILES ( [filename-at-here] -- handle/-1 )
    IF HERE COUNT TYPE HERE OPEN-LINUX ELSE -1 THEN  HANDLE ! ;
: TREAT-FILE ZERO-COUNT COUNT-FILE SHOW-COUNT ;
: CLOSE-FILE HANDLE @ 0 0 CLOSE LINOS ?LINUX-ERROR ;

: DO-FILE BEGIN OPEN-FILE STILL-FILES WHILE TREAT-FILE CLOSE-FILE REPEAT BYE ;

CR
DO-FILE $*
%

# The remainder is interpreted by the shell as a here document,
# but forth has long gone bye.
#
# Note that we need to go BYE in DO-FILE otherwhise we get a spurious new
# line. Furthermore we need ``|tail -n<number of file>'' otherwise there will
# be a lot of OK's.
