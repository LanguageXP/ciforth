\input texinfo
@macro figforth
fig-Forth
@end macro
@setfilename figforthversion
@settitle fig-FORTH 3.0 manual
@setchapternewpage odd
@ifinfo 
This file documents generic fig-forth
3.0 for MSDOS with nasm compiler
32 bits protected mode and 
modern file i/o.
@end ifinfo

@titlepage
@title fig-Forth Manual
A _BITS16_({16})_BITS32_({32})-bits _BOOTED_({standalone}) Forth _HOSTED_LINUX_({running under Linux})_HOSTED_MSDOS_({running under MSDOS})
@author Albert van der Horst 
Dutch Forth Workshop
@end titlepage


@page
@c @vskip Opt plus 1fill
Copyright @copyright{{}} 2000 Dutch Forth Workshop

Permission is granted to copy with attribution.
Program is protected by the GNU Public License.

@node Top, Introduction, Glossary, 

@ifinfo 
example of stuff that only appears in info
@end ifinfo
@page
@chapter Overview
This file documents what a user needs to know for using ciforth. 
ciforth consists of three files:
forthitemize
forthitem
_BOOTED_({A booting floppy or hard disk})dnl
_HOSTED_MSDOS_({forth.com})_HOSTED_LINUX_({lina}) : the program
forthitem
ciforth.ps ciforth.html : the documentation
forthitem
ciforth.blk : source for auxiliary programs
forthenditemize
_BOOTED_({If you inspect a booting floppy from MSDOS you discover that you can 
see the  files forth.com and ciforth.blk. You can even start the program from MSDOS})dnl
These files are generated together by the generic system fig86.gnr.
The documentation only applies to the ciforth with which it goes.

These are the features, if they do not fit your Forth
get a new version. forthxref({Rationale & legalese}).

Forth is an interactive programming system. 
This is the reference documentation for using the
particular version of ciforth once it 
is installed on your system. 
It features the following :

_PROTECTED_({It is running in protected mode.
})
_REAL_({It is running in real mode.
})
_BOOTED_({It is a standalone Forth,
})dnl
_BOOTHD_({booting directly from a hard disk
})dnl
_BOOTFD_({booting from a floppy disk
})dnl
_HOSTED_LINUX_({running under Linux
})dnl
_HOSTED_MSDOS_({running under MSDOS
})dnl
define( {_USEBIOS_}, { Use BIOS for I/O. No redirection but possible stand alone.
})dnl
_RWHD_({Blocks are on a raw hard disk})dnl
_RWFD_({Blocks are on a raw floppy disk})dnl
_RWFILE_({Blocks are allocated in files in files})dnl
_CLASSIC_({ Rely partly on DOS for I/O, partly on the BIOS.})dnl
_MODERN_({ Use DOS for I/O, and uses no obsolete MSDOS features. })dnl
_BITS16_({A number has a precision of 16 bits
})dnl
_BITS32_({A number has a precision of 32 bits
})dnl
_LINUX_C_({C-routines for I/O
})dnl
_LINUX_N_({Calls linux system from assembler
})dnl

@menu 
* General introduction:: Introduction to Forth and this Forth
* Rationale & legalese:: For experts. You don't want to read this.
* Manual::	   User manual 
* Glossary::  	   Description of Forth words
@end menu

@node Introduction, Rationale & legalese, top, top
@chapter Introduction
include(intro.mi)

@node Rationale & legalese, Manual, Introduction, top
@chapter  Rationale & legalese
include(rational.mi)

@node Manual, Rationale & legalese, Glossary, top
@chapter Manual
include(manual.mi)

@node Glossary, top Manual ,Manual,top
@chapter Glossary
Wherever it says 16 bits read single precision number or "cell".
Wherever it says 32 bits read double precision number.

forthcode({X}) must be understood that there is no actual definition with name forthvar({X}). 
In the assembler listing it has label NULL.

include(menu.texinfo)
include(wordset.mi)
@bye

